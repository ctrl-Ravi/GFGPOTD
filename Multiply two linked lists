Difficulty: EasyAccuracy: 46.33%Submissions: 79K+Points: 2
Given elements as nodes of the two singly linked lists. The task is to multiply these two linked lists, say L1 and L2.

Note: The output could be large take modulo 109+7.

Examples :

Input: LinkedList L1 : 3->2 , LinkedList L2 : 2
Output: 64
Explanation: 

Multiplication of 32 and 2 gives 64.
Input: LinkedList L1: 1->0->0 , LinkedList L2 : 1->0
Output: 1000
Explanation: 

Multiplication of 100 and 10 gives 1000.
Expected Time Complexity: O(max(n,m))
Expected Auxilliary Space: O(1)
where n is the size of L1 and m is the size of L2

Solution:
class solution {
  public:
    const int MOD = 1000000007;

    // Helper function to convert a linked list to its integer form
    long long listToNumber(Node* head) {
        long long num = 0;
        while (head != nullptr) {
            num = (num * 10 + head->data) % MOD;
            head = head->next;
        }
        return num;
    }

    // Function to multiply two linked lists
    long long multiplyTwoLists(Node *first, Node *second) {
        // Convert both linked lists to numbers
        long long num1 = listToNumber(first);
        long long num2 = listToNumber(second);
        
        // Multiply the two numbers and take modulo 10^9 + 7
        return (num1 * num2) % MOD;
    }
  
};
